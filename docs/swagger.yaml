openapi: 3.0.0
info:
  title: Jobs API
  description: API documentation for user authentication and job management
  version: 1.0.0

servers:
  - url: http://localhost:1995
    description: Local server

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    User:
      type: object
      properties:
        email: 
          type: string
          example: "user@example.com"
        password:
          type: string
          example: "securepassword"
 
    Jobs:
      type: object
      properties:
        title:
          type: string
          example: "full stack developer"
        description:
          type: string
          example: "coding"
        company:
          type: string
          example: "TechCorp"
        salary:
          type: integer
          example: 70000

paths:
  /register:
    post:
      summary: Register a new user
      tags: [User]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        201:
          description: User registered successfully
        400:
          description: Invalid request data

  /login:
    post:
      summary: User login
      tags: [User]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: "user@example.com"
                password:
                  type: string
                  example: "securepassword"
      responses:
        200:
          description: Login successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    example: "your-jwt-token-here"
        401:
          description: Unauthorized

  /logout:
    get:
      summary: User logout
      tags: [User]
      security:
        - BearerAuth: []
      responses:
        200:
          description: Logout successful
        401:
          description: Unauthorized

  /jobs:
    get:
      summary: Get all jobs
      tags: [Jobs]
      responses:
        200:
          description: List of jobs retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Jobs'
    post:
      summary: Add a new job
      tags: [Jobs]
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Jobs'
      responses:
        201:
          description: Job added successfully
        401:
          description: Unauthorized

  /job/{id}:
    get:
      summary: Get a job by ID
      tags: [Jobs]
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: Job ID
      responses:
        200:
          description: Job found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Jobs'
        404:
          description: Job not found

  /jobs/{id}:
    put:
      summary: Update a job
      tags: [Jobs]
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: Job ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Jobs'
      responses:
        200:
          description: Job updated successfully
        401:
          description: Unauthorized
        404:
          description: Job not found
  
    delete:
      summary: Delete a job
      tags: [Jobs]
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: Job ID
      responses:
        200:
          description: Job deleted successfully
        401:
          description: Unauthorized
        404:
          description: Job not found

  /user/jobs:
    get:
      summary: Get all jobs for a user
      tags: [Jobs]
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Jobs'
      responses:
        200:
          description: Get jobs for the user successfully
        401:
          description: Unauthorized